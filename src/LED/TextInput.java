/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TextInput.java
 *
 * Created on Sep 20, 2013, 10:11:57 PM
 */
package LED;

/**
 *
 * @author Administrator
 */
import java.io.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.lang.*;


public class TextInput extends javax.swing.JFrame {

    /** Creates new form TextInput */
    public TextInput() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        input = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Enter a Text-");

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 15));
        jLabel1.setText("Please Enter a Text(to display on LEDs) :-");

        input.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EnterKey(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(24, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

String txt[]=new String[4];
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    buttonPress();
}//GEN-LAST:event_jButton1ActionPerformed

private void EnterKey(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EnterKey
    if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        buttonPress();
}//GEN-LAST:event_EnterKey
void buttonPress(){
    String inp=input.getText().toUpperCase();
    try{
        File f=new File("Data.txt");
        DataOutputStream out = new DataOutputStream(new FileOutputStream(f));
        out.flush();
        for(int i=0;i<inp.length();i++){
            char ch=inp.charAt(i);
            switch(ch){
                case 'A':
                    a();
                    break;
                case 'B':
                    b();
                    break;
                case 'C':
                    c();
                    break;
                case 'D':
                    d();
                    break;
                case 'E':
                    e();
                    break;
                case 'F':
                    f();
                    break;
                case 'G':
                    g();
                    break;
                case 'H':
                    h();
                    break;
                case 'I':
                    i();
                    break;
                case 'J':
                    j();
                    break;
                case 'K':
                    k();
                    break;
                case 'L':
                    l();
                    break;
                case 'M':
                    m();
                    break;
                case 'N':
                    n();
                    break;
                case 'O':
                    o();
                    break;
                case 'P':
                    p();
                    break;
                case 'Q':
                    q();
                    break;
                case 'R':
                    r();
                    break;
                case 'S':
                    s();
                    break;
                case 'T':
                    t();
                    break;
                case 'U':
                    u();
                    break;
                case 'V':
                    v();
                    break;
                case 'W':
                    w();
                    break;
                case 'X':
                    x();
                    break;
                case 'Y':
                    y();
                    break;
                case 'Z':
                    z();
                    break;
                default:
                    space();
                
            }
            out.writeBytes(txt[0]+",N\n");
            out.writeBytes(txt[1]+",N\n");
            out.writeBytes(txt[2]+",N\n");
            out.writeBytes(txt[3]+",S\n");
        }
        dispose();
    }
    catch(Exception ex){
        JOptionPane.showMessageDialog(null,ex.getMessage(), "Error in program",JOptionPane.ERROR_MESSAGE);
    }
    
}

void space(){
    txt[0]="";
    txt[1]="";
    txt[2]="";
    txt[3]="";
}

void a(){
    txt[0]="3,4,5,6";
    txt[1]="5,7";
    txt[2]="5,7";
    txt[3]="3,4,5,6";
}
void b(){
    txt[0]="3,4,5,6,7";
    txt[1]="3,5,7";
    txt[2]="3,5,7";
    txt[3]="4,6";
}
void c(){
    txt[0]="3,4,5,6,7";
    txt[1]="3,7";
    txt[2]="3,7";
    txt[3]="3,7";
}
void d(){
    txt[0]="3,4,5,6,7";
    txt[1]="3,7";
    txt[2]="3,7";
    txt[3]="4,5,6";
}
void e(){
    txt[0]="3,4,5,6,7";
    txt[1]="3,7";
    txt[2]="3,7";
    txt[3]="3,7";
}
void f(){
    txt[0]="3,4,5,6,7";
    txt[1]="5,7";
    txt[2]="5,7";
    txt[3]="5,7";
}
void g(){
    txt[0]="3,4,5,6,7";
    txt[1]="3,7";
    txt[2]="3,5,7";
    txt[3]="3,4,5,7";
}
void h(){
    txt[0]="3,4,5,6,7";
    txt[1]="5";
    txt[2]="5";
    txt[3]="3,4,5,6,7";
}
void i(){
    txt[0]="3,7";
    txt[1]="3,4,5,6,7";
    txt[2]="3,7";
    txt[3]="3,7";
}
void j(){
    txt[0]="7";
    txt[1]="3,7";
    txt[2]="3,4,5,6,7";
    txt[3]="7";
}
void k(){
    txt[0]="3,4,5,6,7";
    txt[1]="5";
    txt[2]="4,6";
    txt[3]="3,7";
}
void l(){
    txt[0]="3,4,5,6,7";
    txt[1]="3";
    txt[2]="3";
    txt[3]="3";
}
void m(){
    txt[0]="3,4,5,6,7";
    txt[1]="6";
    txt[2]="6";
    txt[3]="3,4,5,6,7";
}
void n(){
    txt[0]="3,4,5,6,7";
    txt[1]="6";
    txt[2]="5";
    txt[3]="3,4,5,6,7";
}
void o(){
    txt[0]="3,4,5,6,7";
    txt[1]="3,7";
    txt[2]="3,7";
    txt[3]="3,4,5,6,7";
}
void p(){
    txt[0]="3,4,5,6,7";
    txt[1]="5,7";
    txt[2]="5,7";
    txt[3]="5,6,7";
}
void q(){
    txt[0]="3,4,5,6,7";
    txt[1]="3,7";
    txt[2]="3,4,7";
    txt[3]="3,4,5,6,7";
}
void r(){
    txt[0]="3,4,5,6,7";
    txt[1]="5,7";
    txt[2]="4,5,7";
    txt[3]="3,5,6,7";
}
void s(){
    txt[0]="3,5,6,7";
    txt[1]="3,5,7";
    txt[2]="3,5,7";
    txt[3]="3,4,5,7";
}
void t(){
    txt[0]="7";
    txt[1]="7";
    txt[2]="3,4,5,6,7";
    txt[3]="7";
}
void u(){
    txt[0]="3,4,5,6,7";
    txt[1]="3";
    txt[2]="3";
    txt[3]="3,4,5,6,7";
}
void v(){
    txt[0]="5,6,7";
    txt[1]="3,4";
    txt[2]="3,4";
    txt[3]="5,6,7";
}
void w(){
    txt[0]="3,4,5,6,7";
    txt[1]="4";
    txt[2]="4";
    txt[3]="3,4,5,6,7";
}
void x(){
    txt[0]="3,7";
    txt[1]="4,5,6";
    txt[2]="4,5,6";
    txt[3]="3,7";
}
void y(){
    txt[0]="3,6,7";
    txt[1]="4,5,";
    txt[2]="5,6,7";
    txt[3]="6,7";
}
void z(){
    txt[0]="3,4,7";
    txt[1]="3,5,7";
    txt[2]="3,6,7";
    txt[3]="3,7";
}




    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextInput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TextInput().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField input;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
